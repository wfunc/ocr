name: Auto Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    if: >-
      ${{ github.actor != 'github-actions[bot]' &&
          (github.event_name != 'push' || github.event.head_commit == null ||
           !contains(github.event.head_commit.message, '[skip ci]')) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Calculate next version
        id: bump
        run: |
          VERSION_FILE=VERSION
          TAG_VERSION=$(git tag -l 'v*' --sort=-v:refname | head -n1 | sed 's/^v//')
          [ -z "$TAG_VERSION" ] && TAG_VERSION="0.0.0"
          if [ -f "$VERSION_FILE" ]; then
            FILE_VERSION=$(tr -d ' \n' < "$VERSION_FILE")
          else
            FILE_VERSION="0.0.0"
          fi
          CURRENT_VERSION=$(printf '%s\n%s\n' "$TAG_VERSION" "$FILE_VERSION" | sort -V | tail -n1)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          MAJOR=${MAJOR:-0}
          MINOR=${MINOR:-1}
          PATCH=${PATCH:-0}
          PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "$NEW_VERSION" > "$VERSION_FILE"
          echo "current=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
          echo "version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Commit version bump
        run: |
          if git diff --quiet VERSION; then
            echo "No version change detected; skipping commit"
            exit 0
          fi
          VERSION="${{ steps.bump.outputs.version }}"
          git add VERSION
          git commit -m "chore: release v${VERSION} [skip ci]"
          git tag "v${VERSION}"
          git push origin HEAD
          git push origin "v${VERSION}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.bump.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.bump.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: v${{ steps.bump.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
